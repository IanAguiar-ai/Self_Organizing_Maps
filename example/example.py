# -*- coding: utf-8 -*-
"""example.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KF2NJXYlwR0kXI19A4330prjA3k2IfDF

# Instructions for using SOM:

## Import the library:
"""

!pip install git+https://github.com/IanAguiar-ai/Self_Organizing_Maps.git

import som.som as som

"""If you have questions about functions:

```
help(som)
```

## Choosing any dataset to use SOM:
"""

from sklearn.datasets import load_iris

iris = load_iris()

X = iris.data  # Features
y = iris.target  # Targets

"""## Starting the SOM object:"""

SOM = som.create_SOM(5, learning = 0.05) #In this case, the SOM is a 10x10 grid, that is, there are 10 neurons

"""## Adding data to objects and arranging the grid on them:"""

som.n1_1.design_weights(X)

"""Training the SOM:"""

som.n0_0.auto_organizing(epochs = 20, print_ = True) #20 interations

"""## Graphs of neurons:"""

resp = som.n1_1.valley(normalize = True)

som.n1_1.amount_of_wins()

"""## Neuron topology chart:"""

clusters = som.n1_1.predict(labels = list(y))

cluster_3_groups = som.adjust_clusters(clusters, groups = 6)

print(cluster_3_groups)

"""## Hierarchical classification by neuron:"""

dict_groups = som.n1_1.dendrogram(groups = 4)

"""# Using library **metrics** to assess cluster quality:"""

!pip install git+https://github.com/IanAguiar-ai/metrics.git

from mutual_information import metrics as mtr

help(mtr.mutual_information)

mtr.mutual_information(cluster_3_groups, list(y))
